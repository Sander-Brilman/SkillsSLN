// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WieEetErMee.Server.Data;

#nullable disable

namespace WieEetErMee.Server.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WieEetErMee.Server.Data.Models.Day", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Days");
                });

            modelBuilder.Entity("WieEetErMee.Server.Data.Models.User", b =>
                {
                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("DefaultPresentOnFriday")
                        .HasColumnType("bit");

                    b.Property<bool>("DefaultPresentOnMonday")
                        .HasColumnType("bit");

                    b.Property<bool>("DefaultPresentOnSaturday")
                        .HasColumnType("bit");

                    b.Property<bool>("DefaultPresentOnSunday")
                        .HasColumnType("bit");

                    b.Property<bool>("DefaultPresentOnThursday")
                        .HasColumnType("bit");

                    b.Property<bool>("DefaultPresentOnTuesday")
                        .HasColumnType("bit");

                    b.Property<bool>("DefaultPresentOnWednesday")
                        .HasColumnType("bit");

                    b.HasKey("Name");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Name = "Sander",
                            DefaultPresentOnFriday = true,
                            DefaultPresentOnMonday = true,
                            DefaultPresentOnSaturday = true,
                            DefaultPresentOnSunday = true,
                            DefaultPresentOnThursday = true,
                            DefaultPresentOnTuesday = true,
                            DefaultPresentOnWednesday = true
                        },
                        new
                        {
                            Name = "Jasper",
                            DefaultPresentOnFriday = true,
                            DefaultPresentOnMonday = false,
                            DefaultPresentOnSaturday = true,
                            DefaultPresentOnSunday = true,
                            DefaultPresentOnThursday = false,
                            DefaultPresentOnTuesday = false,
                            DefaultPresentOnWednesday = false
                        });
                });

            modelBuilder.Entity("WieEetErMee.Server.Data.Models.UserPresence", b =>
                {
                    b.Property<int>("DayId")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsPresent")
                        .HasColumnType("bit");

                    b.HasKey("DayId", "UserName");

                    b.HasIndex("UserName");

                    b.ToTable("UserPresense");
                });

            modelBuilder.Entity("WieEetErMee.Server.Data.Models.UserPresence", b =>
                {
                    b.HasOne("WieEetErMee.Server.Data.Models.Day", "Day")
                        .WithMany("UserPresence")
                        .HasForeignKey("DayId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WieEetErMee.Server.Data.Models.User", "User")
                        .WithMany("UserPresence")
                        .HasForeignKey("UserName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Day");

                    b.Navigation("User");
                });

            modelBuilder.Entity("WieEetErMee.Server.Data.Models.Day", b =>
                {
                    b.Navigation("UserPresence");
                });

            modelBuilder.Entity("WieEetErMee.Server.Data.Models.User", b =>
                {
                    b.Navigation("UserPresence");
                });
#pragma warning restore 612, 618
        }
    }
}
